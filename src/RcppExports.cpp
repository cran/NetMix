// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// approxB
Rcpp::NumericMatrix approxB(Rcpp::NumericVector y, Rcpp::IntegerMatrix d_id, Rcpp::NumericMatrix pi_mat);
RcppExport SEXP _NetMix_approxB(SEXP ySEXP, SEXP d_idSEXP, SEXP pi_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type d_id(d_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pi_mat(pi_matSEXP);
    rcpp_result_gen = Rcpp::wrap(approxB(y, d_id, pi_mat));
    return rcpp_result_gen;
END_RCPP
}
// getZ
Rcpp::IntegerMatrix getZ(Rcpp::NumericMatrix pi_mat);
RcppExport SEXP _NetMix_getZ(SEXP pi_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pi_mat(pi_matSEXP);
    rcpp_result_gen = Rcpp::wrap(getZ(pi_mat));
    return rcpp_result_gen;
END_RCPP
}
// mmsbm_fit
List mmsbm_fit(const NumericMatrix& z_t, const NumericMatrix& x_t, const IntegerVector& y, const IntegerVector& time_id_dyad, const IntegerVector& time_id_node, const IntegerVector& nodes_per_period, const IntegerMatrix& node_id_dyad, const NumericMatrix& mu_b, const NumericMatrix& var_b, const NumericMatrix& phi_init, NumericMatrix& kappa_init_t, NumericMatrix& b_init_t, NumericVector& beta_init, NumericVector& gamma_init, List control);
RcppExport SEXP _NetMix_mmsbm_fit(SEXP z_tSEXP, SEXP x_tSEXP, SEXP ySEXP, SEXP time_id_dyadSEXP, SEXP time_id_nodeSEXP, SEXP nodes_per_periodSEXP, SEXP node_id_dyadSEXP, SEXP mu_bSEXP, SEXP var_bSEXP, SEXP phi_initSEXP, SEXP kappa_init_tSEXP, SEXP b_init_tSEXP, SEXP beta_initSEXP, SEXP gamma_initSEXP, SEXP controlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type z_t(z_tSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x_t(x_tSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type time_id_dyad(time_id_dyadSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type time_id_node(time_id_nodeSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type nodes_per_period(nodes_per_periodSEXP);
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type node_id_dyad(node_id_dyadSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type mu_b(mu_bSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type var_b(var_bSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type phi_init(phi_initSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type kappa_init_t(kappa_init_tSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type b_init_t(b_init_tSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< List >::type control(controlSEXP);
    rcpp_result_gen = Rcpp::wrap(mmsbm_fit(z_t, x_t, y, time_id_dyad, time_id_node, nodes_per_period, node_id_dyad, mu_b, var_b, phi_init, kappa_init_t, b_init_t, beta_init, gamma_init, control));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NetMix_approxB", (DL_FUNC) &_NetMix_approxB, 3},
    {"_NetMix_getZ", (DL_FUNC) &_NetMix_getZ, 1},
    {"_NetMix_mmsbm_fit", (DL_FUNC) &_NetMix_mmsbm_fit, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_NetMix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
